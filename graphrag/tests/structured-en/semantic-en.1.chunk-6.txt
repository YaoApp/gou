use a mobile app development framework, while using the Yao as a backend service. ðŸ‘‰ [REST API](../building-your-application/rest-api)

The SUI template engine, introduced in Yao 0.10.4, offers a fresh way to build web pages. It's still experimental and not fully developed, but it provides a new option for developers. For more advanced frontend needs, consider using frameworks like React or Vue and connect them to Yao via REST API. ðŸ‘‰ [Web Page](../building-your-application/web-page)

TypeScript is the recommended language for writing custom processes, it will be run in the V8 engine. If high-performance is nessary, add the process in Go, it's faster than TypeScript. ðŸ‘‰ [Adding your process](../using-source-code/adding-your-process)

## Concepts Explained

### Yao Process

A Process in Yao is an atomic function that runs in the Yao Runtime.

Yao provides hundreds of internal processes with diverse functionalities. You can also create custom processes in TypeScript or JavaScript.

- **Internal Process**: Defined in Yao's source code, you can find them in the Yao respository.
- **Custom Process**: Written in TypeScript or JavaScript, located in the `scripts` directory of your project.
- **GRPC Plugin**: Written in any language, located in the `plugins` directory of your project.

To run a process, use the `yao run` command.

For more information, see: ðŸ‘‰ **[Process References](../references/yao-process)**

Examples:

```bash
# Execute an internal process
yao run utils.app.Ping   # This will return the version of Yao.


# Execute a custom process defined using TypeScript
yao run scripts.test.Hello 'Yao!'   # Returns 'Hello, Yao!'

yao run scripts.test.Pets cat  # Returns a list of pets in the cat category.

```

**scripts/test.ts**

```typescript
import { Process }