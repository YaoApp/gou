于运行进程的服务器端执行环境。

- **内部进程**用 Go 编写，直接执行。
- **自定义进程**用 TypeScript 或 JavaScript 编写，使用 V8 引擎执行。Yao 提供了 `Process`、`文件系统` 和 `HTTP 请求` 等 API 来编写这些进程。

**注意**：**Yao 运行时不是 Node.js**。它专门用于运行进程，不支持 Node.js API。

**执行方法**：

1. **CLI**：使用 `yao run` 命令。
2. **HTTP 服务器**：使用内置 HTTP 服务器通过 REST API 运行进程。

### Yao 组件

Yao 中的组件不仅仅是传统的前端组件；它是 UI、交互、逻辑和数据的组合。组件中没有前端和后端的概念；它是一个自包含的单元。

组件可以是表格、表单、列表或图表。它也可以是数据模型、API、存储、流程等。

每个组件都有一组进程，一些组件还有一组 REST API。它可以在其他组件、自定义进程中使用，或集成到其他应用程序中。

组件使用 DSL 描述，DSL 是 JSON 格式。它可以由 AI 生成，通过 GUI 创建，或手动编写。

更多信息，请参见：👉 **[DSL 参考](../references/yao-dsl)**

**模型组件**

模型组件用于描述数据结构，它与数据库表模式相同。

模型 DSL 包含一组操作数据的进程，如 CRUD、查询等。您可以直接使用它。

```json
// 模型 DSL
{
  "name": "Article",
  "table": { "name": "article", "comment": "Article" },
  "columns": [
    { "name": "id", "comment": "ID", "type": "ID", "label": "ID" },
    { "label": "Title", "name": "title", "type": "string" },
    { "label": "Summary", "name": "summary", "type": "string" }
  ]
}
```

```bash
# 使用进程查找数据
yao run models.article.Find 1 '::{}'
```

**表格组件**

表格组件用于在